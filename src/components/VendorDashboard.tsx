import React, { useState } from 'react';

const sampleCourses = [
  {
    id: 1,
    title: 'Modern React Development',
    description: 'Build scalable web apps with React, Hooks, and modern tooling.',
    image: 'https://images.unsplash.com/photo-1461749280684-dccba630e2f6?auto=format&fit=crop&w=400&q=80',
    published: true,
    enrollments: 320,
    completions: 210,
    earnings: 4800,
    rating: 4.8,
  },
  {
    id: 2,
    title: 'AI for Business Leaders',
    description: 'Harness AI to drive innovation and growth in your organization.',
    image: 'https://images.unsplash.com/photo-1519389950473-47ba0277781c?auto=format&fit=crop&w=400&q=80',
    published: true,
    enrollments: 180,
    completions: 120,
    earnings: 3200,
    rating: 4.7,
  },
  {
    id: 3,
    title: 'Digital Marketing Mastery',
    description: 'Master SEO, social media, and analytics for business growth.',
    image: 'https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=400&q=80',
    published: false,
    enrollments: 0,
    completions: 0,
    earnings: 0,
    rating: null,
  },
];

const sampleStudents = [
  { name: 'Aisha Bello', course: 'Modern React Development', progress: 80 },
  { name: 'Samuel Lee', course: 'AI for Business Leaders', progress: 100 },
  { name: 'Maria Rodriguez', course: 'Modern React Development', progress: 60 },
];

const VendorDashboard = () => {
  const [courses, setCourses] = useState(sampleCourses);
  const [showAICreate, setShowAICreate] = useState(false);
  const [aiPrompt, setAIPrompt] = useState('');
  const [manualCourse, setManualCourse] = useState({ title: '', description: '', image: '', price: '' });

  // Simulate AI course creation
  const handleAICreate = () => {
    if (!aiPrompt.trim()) return;
    setCourses([
      ...courses,
      {
        id: Date.now(),
        title: aiPrompt.slice(0, 40) + ' (AI Generated)',
        description: 'This course was generated by AI based on your prompt: ' + aiPrompt,
        image: 'https://images.unsplash.com/photo-1465101046530-73398c7f28ca?auto=format&fit=crop&w=400&q=80',
        published: false,
        enrollments: 0,
        completions: 0,
        earnings: 0,
        rating: null,
      },
    ]);
    setAIPrompt('');
    setShowAICreate(false);
  };

  // Manual course creation
  const handleManualCreate = (e: React.FormEvent) => {
    e.preventDefault();
    if (!manualCourse.title || !manualCourse.description) return;
    setCourses([
      ...courses,
      {
        id: Date.now(),
        title: manualCourse.title,
        description: manualCourse.description,
        image: manualCourse.image || 'https://images.unsplash.com/photo-1464983953574-0892a716854b?auto=format&fit=crop&w=400&q=80',
        published: false,
        enrollments: 0,
        completions: 0,
        earnings: 0,
        rating: null,
      },
    ]);
    setManualCourse({ title: '', description: '', image: '', price: '' });
  };

  // Publish/unpublish
  const togglePublish = (id: number) => {
    setCourses(courses.map(c => c.id === id ? { ...c, published: !c.published } : c));
  };

  // Top 10 courses (simulate by enrollments)
  const topCourses = [...courses].filter(c => c.published).sort((a, b) => b.enrollments - a.enrollments).slice(0, 10);

  // Earnings summary
  const totalEarnings = courses.reduce((sum, c) => sum + c.earnings, 0);

  return (
    <div className="bg-[#f6f9fc] min-h-screen py-12 px-4">
      {/* Welcome & Stats */}
      <div className="max-w-5xl mx-auto mb-10 flex flex-col md:flex-row items-center md:items-end justify-between gap-6">
        <div className="flex items-center gap-4">
          <img src="https://randomuser.me/api/portraits/men/44.jpg" alt="Vendor" className="w-20 h-20 rounded-full border-4 border-[#FFD700]" />
          <div>
            <h1 className="text-3xl font-bold text-[#0a174e]">Welcome, Dr. John Vendor!</h1>
            <p className="text-gray-600 mt-1">Manage your courses, earnings, and student success.</p>
          </div>
        </div>
        <div className="flex gap-4">
          <div className="bg-white rounded-lg shadow p-4 text-center">
            <div className="text-2xl font-bold text-[#0a174e]">${totalEarnings.toLocaleString()}</div>
            <div className="text-xs text-gray-500">Total Earnings</div>
          </div>
          <div className="bg-white rounded-lg shadow p-4 text-center">
            <div className="text-2xl font-bold text-[#0a174e]">{courses.length}</div>
            <div className="text-xs text-gray-500">Courses</div>
          </div>
        </div>
      </div>

      {/* Create Course */}
      <div className="max-w-5xl mx-auto mb-12">
        <h2 className="text-2xl font-bold text-[#0a174e] mb-4">Create a New Course</h2>
        <div className="flex gap-4 mb-6">
          <button onClick={() => setShowAICreate(false)} className={`px-6 py-2 rounded-l-lg font-semibold ${!showAICreate ? 'bg-[#0a174e] text-white' : 'bg-white text-[#0a174e] border border-[#0a174e]'}`}>Manual</button>
          <button onClick={() => setShowAICreate(true)} className={`px-6 py-2 rounded-r-lg font-semibold ${showAICreate ? 'bg-[#0a174e] text-white' : 'bg-white text-[#0a174e] border border-[#0a174e]'}`}>AI Prompt</button>
        </div>
        {!showAICreate ? (
          <form className="bg-white rounded-lg shadow p-6 grid gap-4" onSubmit={handleManualCreate}>
            <input type="text" placeholder="Course Title" className="border border-gray-300 rounded-md px-3 py-2" value={manualCourse.title} onChange={e => setManualCourse({ ...manualCourse, title: e.target.value })} />
            <textarea placeholder="Course Description" className="border border-gray-300 rounded-md px-3 py-2" value={manualCourse.description} onChange={e => setManualCourse({ ...manualCourse, description: e.target.value })} rows={3} />
            <input type="text" placeholder="Image URL (optional)" className="border border-gray-300 rounded-md px-3 py-2" value={manualCourse.image} onChange={e => setManualCourse({ ...manualCourse, image: e.target.value })} />
            <input type="text" placeholder="Price (optional)" className="border border-gray-300 rounded-md px-3 py-2" value={manualCourse.price} onChange={e => setManualCourse({ ...manualCourse, price: e.target.value })} />
            <button type="submit" className="w-full py-3 bg-[#FFD700] text-[#0a174e] font-bold rounded-md hover:bg-yellow-300 transition-colors text-lg">Create Course</button>
          </form>
        ) : (
          <div className="bg-white rounded-lg shadow p-6 grid gap-4">
            <textarea placeholder="Describe your course idea..." className="border border-gray-300 rounded-md px-3 py-2" value={aiPrompt} onChange={e => setAIPrompt(e.target.value)} rows={3} />
            <button onClick={handleAICreate} className="w-full py-3 bg-[#FFD700] text-[#0a174e] font-bold rounded-md hover:bg-yellow-300 transition-colors text-lg">Generate with AI</button>
          </div>
        )}
      </div>

      {/* My Courses Grid */}
      <div className="max-w-5xl mx-auto mb-12">
        <h2 className="text-2xl font-bold text-[#0a174e] mb-6">My Courses</h2>
        <div className="grid md:grid-cols-3 gap-8">
          {courses.map((course) => (
            <div key={course.id} className="bg-white rounded-lg shadow p-4 flex flex-col">
              <img src={course.image} alt={course.title} className="w-full h-32 object-cover rounded mb-3" />
              <h3 className="font-semibold text-[#0a174e] text-lg mb-1">{course.title}</h3>
              <p className="text-gray-600 text-sm mb-2 line-clamp-2">{course.description}</p>
              <div className="flex items-center gap-2 mb-2">
                <span className={`text-xs font-bold rounded px-2 py-1 ${course.published ? 'bg-green-100 text-green-700' : 'bg-yellow-100 text-yellow-800'}`}>{course.published ? 'Published' : 'Draft'}</span>
                {course.rating && <span className="text-xs text-yellow-600 font-bold">★ {course.rating}</span>}
              </div>
              <div className="flex-1 flex flex-col justify-end">
                <div className="flex justify-between items-center mt-2">
                  <span className="text-xs text-gray-500">Enrollments: {course.enrollments}</span>
                  <span className="text-xs text-gray-500">Earnings: ${course.earnings}</span>
                </div>
                <div className="flex gap-2 mt-3">
                  <button onClick={() => togglePublish(course.id)} className={`px-4 py-1 rounded text-xs font-semibold ${course.published ? 'bg-[#0a174e] text-white' : 'bg-white text-[#0a174e] border border-[#0a174e]'} hover:bg-[#11235a] hover:text-white transition`}>{course.published ? 'Unpublish' : 'Publish'}</button>
                  <button className="px-4 py-1 bg-[#FFD700] text-[#0a174e] rounded text-xs font-semibold hover:bg-yellow-300 transition">Edit</button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Top 10 Courses Grid (Homepage Preview) */}
      <div className="max-w-5xl mx-auto mb-12">
        <h2 className="text-2xl font-bold text-[#0a174e] mb-6">Top 10 Courses (Homepage Preview)</h2>
        <div className="grid md:grid-cols-5 gap-6">
          {topCourses.map((course) => (
            <div key={course.id} className="bg-white rounded-lg shadow p-3 flex flex-col items-center">
              <img src={course.image} alt={course.title} className="w-20 h-20 object-cover rounded mb-2" />
              <h4 className="font-semibold text-[#0a174e] text-center text-sm mb-1 line-clamp-1">{course.title}</h4>
              <span className="text-xs text-gray-500">★ {course.rating || '-'} | {course.enrollments} students</span>
            </div>
          ))}
        </div>
      </div>

      {/* Student Analytics */}
      <div className="max-w-5xl mx-auto mb-12">
        <h2 className="text-2xl font-bold text-[#0a174e] mb-6">Student Analytics</h2>
        <div className="overflow-x-auto">
          <table className="min-w-full bg-white rounded-lg shadow">
            <thead>
              <tr>
                <th className="px-4 py-2 text-left text-sm font-semibold text-[#0a174e]">Student</th>
                <th className="px-4 py-2 text-left text-sm font-semibold text-[#0a174e]">Course</th>
                <th className="px-4 py-2 text-left text-sm font-semibold text-[#0a174e]">Progress</th>
              </tr>
            </thead>
            <tbody>
              {sampleStudents.map((s, i) => (
                <tr key={i}>
                  <td className="px-4 py-2">{s.name}</td>
                  <td className="px-4 py-2">{s.course}</td>
                  <td className="px-4 py-2">
                    <div className="w-32 bg-gray-200 rounded-full h-2 inline-block align-middle mr-2">
                      <div className="bg-[#FFD700] h-2 rounded-full" style={{ width: `${s.progress}%` }}></div>
                    </div>
                    <span className="text-xs text-gray-500">{s.progress}%</span>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};

export default VendorDashboard; 